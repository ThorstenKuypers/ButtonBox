Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              ./simDash.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              ./TWI.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

renc_bb_status      0x1               ./TWI.o
revlimit_intv_cnt   0x2               ./TWI.o
renc_sel2_status    0x1               ./TWI.o
proto_cc            0x1               ./USART.o
limiter_flags       0x1               ./TWI.o
RotSw_2             0x1               ./TWI.o
warning_flags       0x1               ./TWI.o
lowFuel_intv_cnt    0x2               ./TWI.o
renc_sel1_status    0x1               ./TWI.o
lastRotSw_2         0x1               ./TWI.o
lastRotSw_1         0x2               ./TWI.o
pitLimit_intv_cnt   0x2               ./TWI.o
pwm_dc              0x1               ./TWI.o
RotSw_1             0x2               ./TWI.o
gFlags              0x1               ./TWI.o
bt_poll_cnt         0x1               ./TWI.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD ./TWI.o
LOAD ./USART.o
LOAD ./simDash.o
LOAD ./twi_master.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe76
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000026       0xa2 ./twi_master.o
 *(.progmem*)
                0x000000c8                . = ALIGN (0x2)
                0x000000c8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000c8        0x0 linker stubs
 *(.trampolines*)
                0x000000c8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000c8                __ctors_start = .
 *(.ctors)
                0x000000c8                __ctors_end = .
                0x000000c8                __dtors_start = .
 *(.dtors)
                0x000000c8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000c8        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x000000c8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000c8        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000d4       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x000000d4                __do_copy_data
 .init4         0x000000ea       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x000000ea                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000fa        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000fe        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x000000fe                __bad_interrupt
                0x000000fe                __vector_6
                0x000000fe                __vector_7
                0x000000fe                __vector_5
                0x000000fe                __vector_4
                0x000000fe                __vector_9
                0x000000fe                __vector_2
                0x000000fe                __vector_15
                0x000000fe                __vector_14
                0x000000fe                __vector_10
                0x000000fe                __vector_16
                0x000000fe                __vector_18
 .text          0x00000100        0x0 ./TWI.o
 .text          0x00000100        0x0 ./USART.o
 .text          0x00000100        0x0 ./simDash.o
 .text          0x00000100        0x0 ./twi_master.o
 .text          0x00000100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x00000100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000100                . = ALIGN (0x2)
 *(.text.*)
 .text.init_twi
                0x00000100        0x2 ./TWI.o
                0x00000100                init_twi
 .text.init_usart
                0x00000102       0x10 ./USART.o
                0x00000102                init_usart
 .text.usart_putbyte
                0x00000112       0x2e ./USART.o
                0x00000112                usart_putbyte
 .text.usart_avail
                0x00000140        0x6 ./USART.o
                0x00000140                usart_avail
 .text.usart_getbyte
                0x00000146       0x46 ./USART.o
                0x00000146                usart_getbyte
 .text.__vector_11
                0x0000018c       0x56 ./USART.o
                0x0000018c                __vector_11
 .text.__vector_13
                0x000001e2       0x14 ./USART.o
                0x000001e2                __vector_13
 .text.__vector_12
                0x000001f6       0x68 ./USART.o
                0x000001f6                __vector_12
 .text.usart_send
                0x0000025e       0x36 ./USART.o
                0x0000025e                usart_send
 .text.__vector_3
                0x00000294       0x42 ./simDash.o
                0x00000294                __vector_3
 .text.__vector_8
                0x000002d6       0x26 ./simDash.o
                0x000002d6                __vector_8
 .text.read_encoders
                0x000002fc      0x138 ./simDash.o
                0x000002fc                read_encoders
 .text.update_config
                0x00000434       0x18 ./simDash.o
                0x00000434                update_config
 .text.__vector_1
                0x0000044c       0x60 ./simDash.o
                0x0000044c                __vector_1
 .text.init     0x000004ac      0x102 ./simDash.o
                0x000004ac                init
 .text.main     0x000005ae      0x738 ./simDash.o
                0x000005ae                main
 .text.TWI_Master_Initialise
                0x00000ce6        0xe ./twi_master.o
                0x00000ce6                TWI_Master_Initialise
 .text.TWI_Transceiver_Busy
                0x00000cf4        0x6 ./twi_master.o
                0x00000cf4                TWI_Transceiver_Busy
 .text.TWI_Get_State_Info
                0x00000cfa        0xc ./twi_master.o
                0x00000cfa                TWI_Get_State_Info
 .text.TWI_Start_Transceiver_With_Data
                0x00000d06       0x48 ./twi_master.o
                0x00000d06                TWI_Start_Transceiver_With_Data
 .text.TWI_Start_Transceiver
                0x00000d4e       0x16 ./twi_master.o
                0x00000d4e                TWI_Start_Transceiver
 .text.TWI_Get_Data_From_Transceiver
                0x00000d64       0x38 ./twi_master.o
                0x00000d64                TWI_Get_Data_From_Transceiver
 .text.__vector_17
                0x00000d9c       0xd6 ./twi_master.o
                0x00000d9c                __vector_17
 .text.libgcc   0x00000e72        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000e72        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000e72        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000e72                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e72        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000e72                exit
                0x00000e72                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e72        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000e76                _etext = .

.data           0x00800060       0x16 load address 0x00000e76
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./TWI.o
 .data          0x00800060        0x0 ./USART.o
 .data          0x00800060        0x0 ./simDash.o
 .data          0x00800060        0x0 ./twi_master.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.t        0x00800060        0xc ./simDash.o
                0x00800060                t
 .data.gears    0x0080006c        0x9 ./simDash.o
                0x0080006c                gears
 .data.TWI_state
                0x00800075        0x1 ./twi_master.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800076                . = ALIGN (0x2)
                0x00800076                _edata = .
                0x00800076                PROVIDE (__data_end, .)

.bss            0x00800076       0x62
                0x00800076                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800076        0x0 ./TWI.o
 .bss           0x00800076        0x0 ./USART.o
 .bss           0x00800076        0x0 ./simDash.o
 .bss           0x00800076        0x0 ./twi_master.o
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.usart_tx  0x00800076       0x13 ./USART.o
 .bss.usart_rx  0x00800089       0x23 ./USART.o
 .bss.buttons   0x008000ac        0x6 ./simDash.o
                0x008000ac                buttons
 .bss.last_buttons
                0x008000b2        0x6 ./simDash.o
                0x008000b2                last_buttons
 .bss.TWI_statusReg
                0x008000b8        0x1 ./twi_master.o
                0x008000b8                TWI_statusReg
 .bss.TWI_bufPtr.1589
                0x008000b9        0x1 ./twi_master.o
 .bss.TWI_buf   0x008000ba        0x8 ./twi_master.o
 .bss.TWI_msgSize
                0x008000c2        0x1 ./twi_master.o
 *(COMMON)
 COMMON         0x008000c3       0x14 ./TWI.o
                0x008000c3                renc_bb_status
                0x008000c4                revlimit_intv_cnt
                0x008000c6                renc_sel2_status
                0x008000c7                limiter_flags
                0x008000c8                RotSw_2
                0x008000c9                warning_flags
                0x008000ca                lowFuel_intv_cnt
                0x008000cc                renc_sel1_status
                0x008000cd                lastRotSw_2
                0x008000ce                lastRotSw_1
                0x008000d0                pitLimit_intv_cnt
                0x008000d2                pwm_dc
                0x008000d3                RotSw_1
                0x008000d5                gFlags
                0x008000d6                bt_poll_cnt
 COMMON         0x008000d7        0x1 ./USART.o
                0x008000d7                proto_cc
                0x008000d8                PROVIDE (__bss_end, .)
                0x00000e76                __data_load_start = LOADADDR (.data)
                0x00000e8c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d8        0x0
                0x008000d8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d8                PROVIDE (__noinit_end, .)
                0x008000d8                _end = .
                0x008000d8                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x118
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 ./TWI.o
 .debug_aranges
                0x00000020       0x58 ./USART.o
 .debug_aranges
                0x00000078       0x50 ./simDash.o
 .debug_aranges
                0x000000c8       0x50 ./twi_master.o

.debug_pubnames
                0x00000000      0x64d
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x11f ./TWI.o
 .debug_pubnames
                0x0000011f      0x1a1 ./USART.o
 .debug_pubnames
                0x000002c0      0x1af ./simDash.o
 .debug_pubnames
                0x0000046f      0x1de ./twi_master.o

.debug_info     0x00000000      0xd83
 *(.debug_info)
 .debug_info    0x00000000      0x1ae ./TWI.o
 .debug_info    0x000001ae      0x3c0 ./USART.o
 .debug_info    0x0000056e      0x4c8 ./simDash.o
 .debug_info    0x00000a36      0x34d ./twi_master.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x583
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x66 ./TWI.o
 .debug_abbrev  0x00000066      0x1a4 ./USART.o
 .debug_abbrev  0x0000020a      0x1eb ./simDash.o
 .debug_abbrev  0x000003f5      0x18e ./twi_master.o

.debug_line     0x00000000     0x15b9
 *(.debug_line)
 .debug_line    0x00000000      0x1f2 ./TWI.o
 .debug_line    0x000001f2      0x40b ./USART.o
 .debug_line    0x000005fd      0xbdb ./simDash.o
 .debug_line    0x000011d8      0x3e1 ./twi_master.o

.debug_frame    0x00000000      0x1b0
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 ./TWI.o
 .debug_frame   0x00000020       0x90 ./USART.o
 .debug_frame   0x000000b0       0x80 ./simDash.o
 .debug_frame   0x00000130       0x80 ./twi_master.o

.debug_str      0x00000000      0x37b
 *(.debug_str)
 .debug_str     0x00000000      0x13b ./TWI.o
                                0x184 (size before relaxing)
 .debug_str     0x0000013b       0xb3 ./USART.o
                                0x22b (size before relaxing)
 .debug_str     0x000001ee       0x8c ./simDash.o
                                0x20f (size before relaxing)
 .debug_str     0x0000027a      0x101 ./twi_master.o
                                0x27b (size before relaxing)

.debug_loc      0x00000000      0x1ce
 *(.debug_loc)
 .debug_loc     0x00000000       0x6c ./USART.o
 .debug_loc     0x0000006c       0xe4 ./simDash.o
 .debug_loc     0x00000150       0x7e ./twi_master.o

.debug_macinfo  0x00000000    0x1560f
 *(.debug_macinfo)
 .debug_macinfo
                0x00000000     0x52df ./TWI.o
 .debug_macinfo
                0x000052df     0x5512 ./USART.o
 .debug_macinfo
                0x0000a7f1     0x5830 ./simDash.o
 .debug_macinfo
                0x00010021     0x55ee ./twi_master.o
OUTPUT(simDashECU.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x158
 .debug_ranges  0x00000000       0x18 ./TWI.o
 .debug_ranges  0x00000018       0x50 ./USART.o
 .debug_ranges  0x00000068       0xa8 ./simDash.o
 .debug_ranges  0x00000110       0x48 ./twi_master.o
